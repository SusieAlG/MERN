{"version":3,"sources":["components/Buttons.module.css","components/DeleteButton.jsx","views/AllPiratesPage.jsx","components/PirateForm.jsx","views/NewPiratePage.jsx","components/StatusButton.jsx","views/SinglePiratePage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","DeleteButton","pirate","setPirates","className","styles","btn","onClick","axios","delete","_id","then","pirates","filter","single","navigate","catch","console","log","AllPiratesPage","useState","hasError","setHasError","useEffect","get","response","data","to","map","src","imageUrl","alt","name","PirateForm","method","url","setName","setImageUrl","treasureChests","setTreasureChests","catchPhrase","setCatchPhrase","crewPosition","setCrewPosition","pegLeg","setPegLeg","eyePatch","setEyePatch","hookHand","setHookHand","errors","setErrors","onSubmit","event","preventDefault","err","errorResponse","errorArr","key","push","message","index","style","color","value","onChange","e","target","type","checked","NewPiratePage","StatusButton","status","property","pirateId","currentPirate","setCurrentPirate","handleClick","newStatus","put","newCurrentPirate","nobtn","yesbtn","SinglePiratePage","id","App","path","from","noThrow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6b363768.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Buttons_btn__65elP\",\"yesbtn\":\"Buttons_yesbtn__3lx9V\",\"nobtn\":\"Buttons_nobtn__3Lhw9\"};","import React from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport styles from './Buttons.module.css';\n\nfunction DeleteButton({ pirate, setPirates }) {\n    function handleDelete() {\n        axios.delete('http://localhost:8000/api/pirates/' + pirate._id)\n            .then(() => {\n                setPirates(pirates => pirates.filter(single => single._id !== pirate._id));\n                navigate('/')\n            })\n            .catch(console.log);\n    }\n\n    return (\n        <button className={styles.btn} onClick={handleDelete}>Walk the Plank</button>\n    )\n}\n\nexport default DeleteButton;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\nimport '../components/Body.css';\nimport DeleteButton from '../components/DeleteButton';\n\n\nfunction AllPiratesPage() {\n    const [pirates, setPirates] = useState(null);\n    const [hasError, setHasError] = useState(false);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pirates')\n            .then(response => setPirates(response.data))\n            .catch(() => setHasError(true));\n    }, []);\n\n    if(hasError) return 'Something went wrong!';\n\n    if(pirates === null) return 'Loading...';\n\n    return (\n        <div className=\"main-container\">\n            <header className=\"main-header\">\n                <h1>PIRATE CREW</h1>\n                <br/>\n                <button className=\"header-btn\"><Link to=\"/pirates/new\" >Add Pirate</Link></button>\n            </header>\n            <div className=\"main-body\">\n                {pirates.map(pirate => (\n                <div className=\"pirate-container\">\n                    <img src={pirate.imageUrl} alt={pirate.name} className=\"pirate-image\"/>\n                    <div className=\"pirate-container-right\">\n                        <h2>{pirate.name}</h2>\n                        <button className=\"btn\"><Link to={\"/pirates/\"+pirate._id} >View Pirate</Link></button>\n                        <DeleteButton  pirate={pirate} setPirates={setPirates} />\n                    </div>\n                </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default AllPiratesPage;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport styles from './Buttons.module.css';\nimport './Body.css';\n\n\nfunction PirateForm({ pirate, method, url }) {\n    const [name, setName] = useState(pirate.name);\n    const [imageUrl, setImageUrl] = useState(pirate.imageUrl);\n    const [treasureChests, setTreasureChests] = useState(pirate.treasureChests);\n    const [catchPhrase, setCatchPhrase] = useState(pirate.catchPhrase);\n    const [crewPosition, setCrewPosition] = useState(pirate.crewPosition);\n    const [pegLeg, setPegLeg] = useState(pirate.pegLeg);\n    const [eyePatch, setEyePatch] = useState(pirate.eyePatch);\n    const [hookHand, setHookHand] = useState(pirate.hookHand);\n\n    const [errors, setErrors] = useState([]);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setErrors([]);\n\n        axios[method](url, {\n            name,\n            imageUrl,\n            treasureChests,\n            catchPhrase,\n            crewPosition,\n            pegLeg,\n            eyePatch,\n            hookHand\n        })\n            .then(() => navigate('/'))\n            .catch(err => {\n                const errorResponse = err.response.data.errors;\n                const errorArr = [];\n                for (const key in errorResponse) {\n                    errorArr.push(errorResponse[key].message);\n                }\n                setErrors(errorArr);\n            });\n    }\n\n    return (\n        <div>\n            <form className=\"form-body\" onSubmit={handleSubmit}>\n                {errors.map((err, index) => (\n                    <p key={index} style={{ color: 'red' }}>{err}</p>\n                ))}\n                <div>\n                    <label>Pirate Name: </label>\n                    <input\n                        name=\"name\"\n                        value={name}\n                        onChange={e => setName(e.target.value)}    \n                    />\n                </div>\n                <div>\n                    <label>Image URL: </label>\n                    <input\n                        name=\"imageUrl\"\n                        value={imageUrl}\n                        onChange={e => setImageUrl(e.target.value)}    \n                    />\n                </div>\n                <div>\n                    <label>Treasure Chests: </label>\n                    <input\n                        type=\"number\"\n                        name=\"treasureChests\"\n                        value={treasureChests}\n                        onChange={e => setTreasureChests(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label>Catch Phrase: </label>\n                    <input\n                        name=\"catchPhrase\"\n                        value={catchPhrase}\n                        onChange={e => setCatchPhrase(e.target.value)}    \n                    />\n                </div>\n                <div>\n                    <label>Crew Position: </label>\n                    <select\n                        name=\"crewPosition\"\n                        value={crewPosition}\n                        onChange={e => setCrewPosition(e.target.value)}    \n                    >\n                        <option value=\"\">Please select a crew position</option>\n                        <option value=\"Captain\">Captain</option>\n                        <option value=\"First Mate\">First Mate</option>\n                        <option value=\"Quarter Master\">Quarter Master</option>\n                        <option value=\"Bootswain\">Bootswain</option>\n                        <option value=\"Powder Monkey\">Powder Monkey</option>\n                    </select>\n                </div>\n                <div>\n                    <label>Peg Leg</label>\n                    <input\n                        type=\"checkbox\"\n                        checked={pegLeg}\n                        onChange={e => setPegLeg(e.target.checked)}\n                    />\n                </div>\n                <div>\n                    <label>Eye Patch</label>\n                    <input\n                        type=\"checkbox\"\n                        checked={eyePatch}\n                        onChange={e => setEyePatch(e.target.checked)}\n                    />\n                </div>\n                <div>\n                    <label>Hook Hand</label>\n                    <input\n                        type=\"checkbox\"\n                        checked={hookHand}\n                        onChange={e => setHookHand(e.target.checked)}\n                    />\n                </div>\n                <div>\n                    <button type=\"button\" className={styles.btn} onClick={() => navigate(\"/\")}>Cancel</button>\n                    <button className={styles.btn}>Add Pirate</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default PirateForm;","import React from 'react';\nimport { Link } from '@reach/router';\nimport '../components/Body.css';\nimport PirateForm from '../components/PirateForm';\n\nfunction NewPiratePage() {\n    const newPirate = {\n        name: \"\",\n        imageUrl: \"\",\n        treasureChests: \"\",\n        catchPhrase: \"\",\n        crewPosition: \"\",\n        pegLeg: true,\n        eyePatch: true,\n        hookHand: true\n    };\n\n    return (\n        <div className=\"main-container\">\n            <header className=\"main-header\">\n                <h1>ADD PIRATE</h1>\n                <button className=\"header-btn\"><Link to=\"/pirates\" >Crew board</Link></button>\n            </header>\n            <div className=\"main-body\">\n                <PirateForm\n                    pirate={newPirate}\n                    method=\"post\"\n                    url=\"http://localhost:8000/api/pirates\"\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default NewPiratePage;","import React from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport styles from './Buttons.module.css';\n\nfunction StatusButton({ status, property, pirateId, currentPirate, setCurrentPirate }) {\n    function handleClick() {\n        let newStatus = !status;\n        if (property === \"pegLeg\") {\n            axios.put(\"http://localhost:8000/api/pirates/\" + pirateId, {\n                pegLeg: newStatus\n            })\n                .then(() => {\n                    let newCurrentPirate = currentPirate;\n                    newCurrentPirate.pegLeg = newStatus;\n                    setCurrentPirate(newCurrentPirate);\n                    navigate('/pirates/' + pirateId)\n                })\n                .catch(console.log)\n        }\n        else if (property === \"eyePatch\") {\n            axios.put(\"http://localhost:8000/api/pirates/\" + pirateId, {\n                eyePatch: newStatus\n            })\n                .then(() => {\n                    let newCurrentPirate = currentPirate;\n                    newCurrentPirate.eyePatch = newStatus;\n                    setCurrentPirate(newCurrentPirate);\n                    navigate('/pirates/' + pirateId)\n                })\n                .catch(console.log)\n        }\n        else if (property === \"hookHand\") {\n            axios.put(\"http://localhost:8000/api/pirates/\" + pirateId, {\n                hookHand: newStatus\n            })\n                .then(() => {\n                    let newCurrentPirate = currentPirate;\n                    newCurrentPirate.hookHand = newStatus;\n                    setCurrentPirate(newCurrentPirate);\n                    navigate('/pirates/' + pirateId)\n                })\n                .catch(console.log)\n        }\n    }\n\n    return !status ? (<button className={styles.yesbtn} onClick={handleClick}>Yes</button>) : (<button className={styles.nobtn} onClick={handleClick}>No</button>)\n}\n\nexport default StatusButton;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\nimport '../components/Body.css';\nimport StatusButton from '../components/StatusButton';\nimport DeleteButton from '../components/DeleteButton';\n\nfunction SinglePiratePage({ id }) {\n    const [currentPirate, setCurrentPirate] = useState(null);\n    const [hasError, setHasError] = useState(false);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/pirates/' + id)\n            .then(response => setCurrentPirate(response.data))\n            .catch(() => setHasError(true));\n    }, []);\n\n    if(hasError) return 'Something went wrong!';\n\n    if(currentPirate === null) return 'Loading...';\n\n    return (\n        <div className=\"main-container\">\n            <header className=\"main-header\">\n                <h1>{currentPirate.name}</h1>\n                <button className=\"header-btn\"><Link to=\"/pirates\" >CREW BOARD</Link></button>\n            </header>\n            <div className=\"single-body\">\n                <div className=\"single-left\">\n                    <img className=\"single-image\" src={currentPirate.imageUrl} alt={currentPirate.name}/>\n                    <p>\"{currentPirate.catchPhrase}\"</p>\n                </div>\n                <div className=\"about\">\n                    <h2>About</h2>\n                    <p>Position: {currentPirate.crewPosition}</p>\n                    <p>Treasure Chests: {currentPirate.treasureChests}</p>\n                    <p>Peg Leg: {currentPirate.pegLeg ? \"Yes\" : \"No\"} |  <StatusButton status={currentPirate.pegLeg} property=\"pegLeg\" pirateId={currentPirate._id} currentPirate={currentPirate} setCurrentPirate={setCurrentPirate}/></p>\n                    <p>Eye Patch: {currentPirate.eyePatch ? \"Yes\" : \"No\"} |  <StatusButton status={currentPirate.eyePatch} property=\"eyePatch\" pirateId={currentPirate._id} currentPirate={currentPirate} setCurrentPirate={setCurrentPirate}/></p>\n                    <p>Hook Hand: {currentPirate.hookHand ? \"Yes\" : \"No\"} |  <StatusButton status={currentPirate.hookHand} property=\"hookHand\" pirateId={currentPirate._id} currentPirate={currentPirate} setCurrentPirate={setCurrentPirate}/></p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SinglePiratePage;","import React from 'react';\nimport { Router, Redirect } from '@reach/router';\nimport './App.css';\nimport AllPiratesPage from './views/AllPiratesPage';\nimport NewPiratePage from './views/NewPiratePage';\nimport SinglePiratePage from './views/SinglePiratePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <AllPiratesPage path=\"pirates\" />\n        <NewPiratePage path=\"pirates/new\" />\n        <SinglePiratePage path=\"pirates/:id\" />\n        <Redirect from=\"/\" to=\"pirates\" noThrow />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}